/*
BCC PubSub API

Event messaging and webhook service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// SubscribeRequestData struct for SubscribeRequestData
type SubscribeRequestData struct {
	Type string `json:"type"`
	EndPoint string `json:"endPoint"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	Scopes []string `json:"scopes,omitempty"`
}

// NewSubscribeRequestData instantiates a new SubscribeRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscribeRequestData(type_ string, endPoint string) *SubscribeRequestData {
	this := SubscribeRequestData{}
	this.Type = type_
	this.EndPoint = endPoint
	return &this
}

// NewSubscribeRequestDataWithDefaults instantiates a new SubscribeRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscribeRequestDataWithDefaults() *SubscribeRequestData {
	this := SubscribeRequestData{}
	return &this
}

// GetType returns the Type field value
func (o *SubscribeRequestData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SubscribeRequestData) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SubscribeRequestData) SetType(v string) {
	o.Type = v
}

// GetEndPoint returns the EndPoint field value
func (o *SubscribeRequestData) GetEndPoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndPoint
}

// GetEndPointOk returns a tuple with the EndPoint field value
// and a boolean to check if the value has been set.
func (o *SubscribeRequestData) GetEndPointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndPoint, true
}

// SetEndPoint sets field value
func (o *SubscribeRequestData) SetEndPoint(v string) {
	o.EndPoint = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscribeRequestData) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscribeRequestData) GetSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *SubscribeRequestData) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *SubscribeRequestData) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *SubscribeRequestData) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *SubscribeRequestData) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscribeRequestData) GetScopes() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscribeRequestData) GetScopesOk() (*[]string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return &o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *SubscribeRequestData) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *SubscribeRequestData) SetScopes(v []string) {
	o.Scopes = v
}

func (o SubscribeRequestData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["endPoint"] = o.EndPoint
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	return json.Marshal(toSerialize)
}

type NullableSubscribeRequestData struct {
	value *SubscribeRequestData
	isSet bool
}

func (v NullableSubscribeRequestData) Get() *SubscribeRequestData {
	return v.value
}

func (v *NullableSubscribeRequestData) Set(val *SubscribeRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscribeRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscribeRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscribeRequestData(val *SubscribeRequestData) *NullableSubscribeRequestData {
	return &NullableSubscribeRequestData{value: val, isSet: true}
}

func (v NullableSubscribeRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscribeRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



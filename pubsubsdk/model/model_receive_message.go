/*
BCC PubSub API

Event messaging and webhook service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// ReceiveMessage struct for ReceiveMessage
type ReceiveMessage struct {
	Data NullableString `json:"data,omitempty"`
	MessageId NullableString `json:"messageId,omitempty"`
	PublishTime NullableString `json:"publishTime,omitempty"`
	Attributes map[string]string `json:"attributes,omitempty"`
}

// NewReceiveMessage instantiates a new ReceiveMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReceiveMessage() *ReceiveMessage {
	this := ReceiveMessage{}
	return &this
}

// NewReceiveMessageWithDefaults instantiates a new ReceiveMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReceiveMessageWithDefaults() *ReceiveMessage {
	this := ReceiveMessage{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceiveMessage) GetData() string {
	if o == nil || o.Data.Get() == nil {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceiveMessage) GetDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *ReceiveMessage) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *ReceiveMessage) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *ReceiveMessage) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *ReceiveMessage) UnsetData() {
	o.Data.Unset()
}

// GetMessageId returns the MessageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceiveMessage) GetMessageId() string {
	if o == nil || o.MessageId.Get() == nil {
		var ret string
		return ret
	}
	return *o.MessageId.Get()
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceiveMessage) GetMessageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MessageId.Get(), o.MessageId.IsSet()
}

// HasMessageId returns a boolean if a field has been set.
func (o *ReceiveMessage) HasMessageId() bool {
	if o != nil && o.MessageId.IsSet() {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given NullableString and assigns it to the MessageId field.
func (o *ReceiveMessage) SetMessageId(v string) {
	o.MessageId.Set(&v)
}
// SetMessageIdNil sets the value for MessageId to be an explicit nil
func (o *ReceiveMessage) SetMessageIdNil() {
	o.MessageId.Set(nil)
}

// UnsetMessageId ensures that no value is present for MessageId, not even an explicit nil
func (o *ReceiveMessage) UnsetMessageId() {
	o.MessageId.Unset()
}

// GetPublishTime returns the PublishTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceiveMessage) GetPublishTime() string {
	if o == nil || o.PublishTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.PublishTime.Get()
}

// GetPublishTimeOk returns a tuple with the PublishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceiveMessage) GetPublishTimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublishTime.Get(), o.PublishTime.IsSet()
}

// HasPublishTime returns a boolean if a field has been set.
func (o *ReceiveMessage) HasPublishTime() bool {
	if o != nil && o.PublishTime.IsSet() {
		return true
	}

	return false
}

// SetPublishTime gets a reference to the given NullableString and assigns it to the PublishTime field.
func (o *ReceiveMessage) SetPublishTime(v string) {
	o.PublishTime.Set(&v)
}
// SetPublishTimeNil sets the value for PublishTime to be an explicit nil
func (o *ReceiveMessage) SetPublishTimeNil() {
	o.PublishTime.Set(nil)
}

// UnsetPublishTime ensures that no value is present for PublishTime, not even an explicit nil
func (o *ReceiveMessage) UnsetPublishTime() {
	o.PublishTime.Unset()
}

// GetAttributes returns the Attributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReceiveMessage) GetAttributes() map[string]string {
	if o == nil  {
		var ret map[string]string
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReceiveMessage) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ReceiveMessage) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *ReceiveMessage) SetAttributes(v map[string]string) {
	o.Attributes = v
}

func (o ReceiveMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.MessageId.IsSet() {
		toSerialize["messageId"] = o.MessageId.Get()
	}
	if o.PublishTime.IsSet() {
		toSerialize["publishTime"] = o.PublishTime.Get()
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableReceiveMessage struct {
	value *ReceiveMessage
	isSet bool
}

func (v NullableReceiveMessage) Get() *ReceiveMessage {
	return v.value
}

func (v *NullableReceiveMessage) Set(val *ReceiveMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableReceiveMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableReceiveMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceiveMessage(val *ReceiveMessage) *NullableReceiveMessage {
	return &NullableReceiveMessage{value: val, isSet: true}
}

func (v NullableReceiveMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceiveMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


